#
# Database
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/seata_demo?characterEncoding=utf-8&useSSL=false&useTimezone=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化连接
spring.datasource.druid.initial-size=10
# 较多初始化连接时，加快启动时间
spring.datasource.druid.async-init=true
# 最小空闲连接
spring.datasource.druid.min-idle=10
# 最大连接数
spring.datasource.druid.max-active=100
# 连接保持空闲而不被驱逐的最小时间，单位：毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
spring.datasource.druid.validation-query=SELECT 'x'
# 建议配置为true，防止取到的连接不可用。获取连接时，不校验是否可用，开启会有损性能
spring.datasource.druid.test-on-borrow=false
# 归还连接到连接池时，校验连接是否可用
spring.datasource.druid.test-on-return=false
# 为true即可，不影响性能，并且保证安全性。意义为：申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.druid.test-while-idle=true
# 超时限制，目前为5分钟，如果有业务处理时间超过5分钟，可以适当调整，单位：秒
spring.datasource.druid.remove-abandoned-timeout=1800
#
# Mybatis
mybatis.mapper-locations=classpath:/mappings/*.xml
mybatis.config-location=classpath:/mybatis.xml
#
# Eureka
eureka.client.service-url.default-zone=http://127.0.0.1:8761/eureka/
#
# Feign
feign.client.config.default.connect-timeout=3000
feign.client.config.default.read-timeout=3000
feign.client.config.default.logger-level=full
#
# Seata
spring.cloud.alibaba.seata.tx-service-group=seata-demo-tcc-tx
